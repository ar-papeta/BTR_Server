@using System.Net.Sockets;
@using System.Text;
@using System;
@using BTR_Server.Data;
@using BTR_Server.Protocol;

@page "/stabilization"

<h1 >STABILIZATION MODULE </h1>

<form>
    <h5>Режим керування</h5>

    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" checked="checked" class="custom-control-input" id="motorMode1" name="motorMode" @onclick="motorMode1">
        <label class="custom-control-label" for="motorMode1">Ручний режим</label>
    </div>


    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" class="custom-control-input" id="motorMode2" name="motorMode" @onclick="motorMode2">
        <label class="custom-control-label" for="motorMode2">Режим стабілізація</label>
    </div>


    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" class="custom-control-input" id="motorMode3" name="motorMode" @onclick="motorMode3">
        <label class="custom-control-label" for="motorMode3">Автоматичний режим</label>
    </div>
</form>
<br />
<form>
    <h5>Режим камери</h5>

    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" checked="checked" class="custom-control-input" id="cameraMode1" name="cameraMode" @onclick="cameraMode1">
        <label class="custom-control-label" for="cameraMode1">Широка камера</label>
    </div>


    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" class="custom-control-input" id="cameraMode2" name="cameraMode" @onclick="cameraMode2">
        <label class="custom-control-label" for="cameraMode2">Вузька камера</label>
    </div>


    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" class="custom-control-input" id="cameraMode3" name="cameraMode" @onclick="cameraMode3">
        <label class="custom-control-label" for="cameraMode3">Тепловізор</label>
    </div>
</form>
<br />
<form>
    <h5>Режим стрільби</h5>

    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" checked="checked" class="custom-control-input" id="single_fire" name="fire" @onclick="single_fire">
        <label class="custom-control-label" for="single_fire">Одиночні</label>
    </div>


    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" class="custom-control-input" id="auto_fire" name="fire" @onclick="auto_fire">
        <label class="custom-control-label" for="auto_fire">Автомат</label>
    </div>


    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" class="custom-control-input" id="semi_fire" name="fire" @onclick="semi_fire">
        <label class="custom-control-label" for="semi_fire">Полуавтомат</label>
    </div>
</form>
<br />

<form>
    <h5>Тип зброї</h5>

    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" checked="checked" class="custom-control-input" id="garmata" name="gun" @onclick="garmata">
        <label class="custom-control-label" for="garmata">Гармата</label>
    </div>


    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" class="custom-control-input" id="granatomet" name="gun" @onclick="granatomet">
        <label class="custom-control-label" for="granatomet">Гранатомет</label>
    </div>

</form>
<br />
<form>
    <button type="button" class="btn btn-dark btn-circle" id="reset" @onclick="ResetSensors">Обнулення датчиків</button>
    <button type="button" class="btn btn-dark btn-circle" id="engine" @onclick="ResetMotors">Мотори в 0</button>
</form>

<div class="container">



    <div id="joystick">
        <svg width="100%" height="100%" viewBox="0 0 100 100">
            <defs>
                <linearGradient id="grad1" x1="3%" y1="3%" x2="3%" y2="100%">
                    <stop offset="0%" style="stop-color:rgb(16,16,16);stop-opacity:1" />
                    <stop offset="100%" style="stop-color:rgb(240,240,240);stop-opacity:1" />
                </linearGradient>
                <linearGradient id="grad2" x1="0%" y1="0%" x2="0%" y2="100%">
                    <stop offset="0%" style="stop-color:rgb(240,240,240);stop-opacity:1" />
                    <stop offset="100%" style="stop-color:rgb(16,16,16);stop-opacity:1" />
                </linearGradient>
                <linearGradient id="grad3" x1="0%" y1="0%" x2="0%" y2="100%">
                    <stop offset="0%" style="stop-color:rgb(168,168,168);stop-opacity:1" />
                    <stop offset="100%" style="stop-color:rgb(239,239,239);stop-opacity:1" />
                </linearGradient>
            </defs>
            <circle cx="50" cy="50" r="50" fill="url(#grad1)" />
            <circle cx="50" cy="50" r="47" fill="url(#grad2)" stroke="black" stroke-width="1.5px" />
            <circle cx="50" cy="50" r="44" fill="url(#grad3)" />
            <circle cx="50" cy="50" r="20" fill="#cccccc" stroke="black" stroke-width="1px" onclick="alert('CENTER');" />




            <path d="M50,9 60,26 40,26Z" fill="rgba(0,0,0,0.9)" onclick="alert('UP');" />
            <path d="M50,91 60,74 40,74Z" fill="rgba(0,0,0,0.9)" onclick="alert('DOWN');" />
            <path d="M9,50 26,60 26,40Z" fill="rgba(0,0,0,0.9)" onclick="alert('LEFT');" />
            <path d="M91,50 74,60 74,40Z" fill="rgba(0,0,0,0.9)" onclick="alert('RIGHT');" />
        </svg>
    </div>
    <button type="button" class="btn btn-dark btn-circle" id="fire" @onclick="shoot1" >Вистріл1</button>
    <button type="button" class="btn btn-dark btn-circle" id="fire2"  @onclick="shoot2">Вистріл2</button>
</div>


<div class="form-row">
    <div class="col-md-3 mb-3">
        <label for="validationDefault03">Балістична поправка вертикаль</label>
        <input type="number" class="form-control" id="validationDefault03" @bind="StabData.CorrectionVertData">
    </div>

    <div class="col-md-3 mb-4">

        <label for="validationDefault04">Балістична поправка горизонталь</label>
        <input type="number" class="form-control" id="validationDefault04" @bind="StabData.CorrectionHorData">
    </div>
    <button type="button" class="btn btn-dark btn-circle" id="balistic_correction" @onclick="balistic">Балістична корекція</button>
</div>
<h1>@StabData.CorrectionHorData</h1>



@code {
    public static ProtocolAPI protocol = new ProtocolAPI();
    public static StabData StabData = new StabData();





    //Motor modes
    private int FULL_MANUAL_MODE = 1;
    private int STABILISATION_MANUAL_MODE = 2;
    private int AUTO_TRACKING_MODE = 3;

    //Shoot modes
    private int SINGLE_MODE = 1000;
    private int BURST_MODE = 2000;
    private int SEMI_BURST_MODE = 3000;

    //Weapon type
    private int GUN = 10000;
    private int GRENADE_LAUNCHER = 20000;

    //Shoot status
    private int SHOOT_ON = 20;
    private int SHOOT_OFF = 10;

    //Zero motor ststus
    private int ZERO_MOTOR_ON = 2;
    private int ZERO_MOTOR_OFF = 1;

    //Zero sensor status
    private int ZERO_SENSOR_ON = 200;
    private int ZERO_SENSOR_OFF = 100;

    //Shootgun shot status
    private long SHOTGUN_SHOOT_ON = 200000;
    private long SHOTGUN_SHOOT_OFF = 100000;

    //Camera mode
    private long WIDE_CAMERA = 1000000;
    private long NARROW_CAMERA = 2000000;
    private long THERMALVISOR_CAMERA = 3000000;
    void ResetSensors()
    {
        StabData.ResetGyroscopesStatus = ZERO_SENSOR_ON;
        protocol.UpdateAndSendPacket(StabData);
        System.Threading.Thread.Sleep(100);
        StabData.ResetGyroscopesStatus = ZERO_SENSOR_OFF;
        protocol.UpdateAndSendPacket(StabData);
    }

    void ResetMotors()
    {
        StabData.ResetMotorStatus = ZERO_MOTOR_ON;
        protocol.UpdateAndSendPacket(StabData);
        System.Threading.Thread.Sleep(100);
        StabData.ResetMotorStatus = ZERO_MOTOR_OFF;
        protocol.UpdateAndSendPacket(StabData);
    }

    void motorMode1()
    {

        StabData.MotorControlMode = FULL_MANUAL_MODE;
        protocol.UpdateAndSendPacket(StabData);

    }

    void motorMode2()
    {
        StabData.MotorControlMode = STABILISATION_MANUAL_MODE;
        protocol.UpdateAndSendPacket(StabData);
    }

    void motorMode3()
    {
        StabData.MotorControlMode = AUTO_TRACKING_MODE;
        protocol.UpdateAndSendPacket(StabData);
    }



    void cameraMode1()
    {

        StabData.CameraViewMode = WIDE_CAMERA;
        protocol.UpdateAndSendPacket(StabData);

    }

    void cameraMode2()
    {
        StabData.CameraViewMode = NARROW_CAMERA;
        protocol.UpdateAndSendPacket(StabData);
    }

    void cameraMode3()
    {
        StabData.CameraViewMode = THERMALVISOR_CAMERA;
        protocol.UpdateAndSendPacket(StabData);
    }


    void single_fire()
    {
        StabData.ShootMode = SINGLE_MODE;
        protocol.UpdateAndSendPacket(StabData);
    }

    void auto_fire()
    {
        StabData.ShootMode = BURST_MODE;
        protocol.UpdateAndSendPacket(StabData);
    }

    void semi_fire()
    {
        StabData.ShootMode = SEMI_BURST_MODE;
        protocol.UpdateAndSendPacket(StabData);
    }

    void garmata()
    {
        StabData.WeaponType = GUN;
        protocol.UpdateAndSendPacket(StabData);
    }

    void granatomet()
    {
        StabData.WeaponType = GRENADE_LAUNCHER;
        protocol.UpdateAndSendPacket(StabData);
    }

    void balistic()
    {
        protocol.UpdateAndSendPacket(StabData);
    }

    void shoot1()
    {
        StabData.ShotStatus = SHOOT_ON;
        protocol.UpdateAndSendPacket(StabData);
        System.Threading.Thread.Sleep(100);
        StabData.ShotStatus = SHOOT_OFF;
        protocol.UpdateAndSendPacket(StabData);
    }

    void shoot2()
    {
        StabData.ShotgunShotStatus = SHOTGUN_SHOOT_ON;
        protocol.UpdateAndSendPacket(StabData);
        System.Threading.Thread.Sleep(100);
        StabData.ShotgunShotStatus = SHOTGUN_SHOOT_OFF;
        protocol.UpdateAndSendPacket(StabData);
    }



}
